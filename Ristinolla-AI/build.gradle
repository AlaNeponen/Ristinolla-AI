plugins {
    
    id 'java'
    
    id 'jacoco'
    
    id 'checkstyle'
    
}

sourceCompatibility = '1.8'
[compileJava, compileTestJava]*.options*.encoding = 'UTF-8'

// NetBeans will automatically add "run" and "debug" tasks relying on the
// "mainClass" property. You may however define the property prior executing
// tasks by passing a "-PmainClass=<QUALIFIED_CLASS_NAME>" argument.
//
// Note however, that you may define your own "run" and "debug" task if you
// prefer. In this case NetBeans will not add these tasks but you may rely on
// your own implementation.
if (!hasProperty('mainClass')) {
    ext.mainClass = 'ristinolla.main.Main'
}
jar {
    manifest {
        attributes(
            'Main-Class': 'ristinolla.main.Main'
        )
    }
}
repositories {
    mavenCentral()
    // You may define additional repositories, or even remove "mavenCentral()".
    // Read more about repositories here:
    //   http://www.gradle.org/docs/current/userguide/dependency_management.html#sec:repositories
}

dependencies {
    // TODO: Add dependencies here ...
    // You can read more about how to add dependency here:
    //   http://www.gradle.org/docs/current/userguide/dependency_management.html#sec:how_to_declare_your_dependencies
    testImplementation 'junit:junit:4.10'
    testCompile group: 'junit', name: 'junit', version: '4.10'
    
}

checkstyle {
    toolVersion '8.36'
    configFile file("config/checkstyle/checkstyle.xml")
}

checkstyleMain {
    source ='src/main/java'
}

checkstyleTest {
    source ='src/test/java'
}

test {
    useJUnit();
    maxHeapSize = '1G'
    finalizedBy jacocoTestReport
}

jacocoTestReport {
    reports {
        xml.enabled = true
        html.enabled = true
    }
}

task myJavadocs(type: Javadoc) {
    source ='src/main/java'
}

check.dependsOn jacocoTestReport
